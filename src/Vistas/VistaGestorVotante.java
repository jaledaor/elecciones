/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.ClsMensajes;
import Clases.ClsVotante;
import Controladores.CtlVotante;
import java.util.LinkedList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hueck
 */
public class VistaGestorVotante extends javax.swing.JFrame {

    boolean respuesta;
    JFrame menuPrincipal;
    CtlVotante controladorVotante;
    ClsMensajes mensaje;
    String tipoDocumento;
    String numeroDocumento;
    String nombre;
    String telefono;
    String correo;
    String id;
    int fila;
    LinkedList<ClsVotante> listaVotantes;
    // Patr√≥n para validar el email
    Pattern patron = Pattern
            .compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
    String PatronTel = "[+-]?\\d*(\\.\\d+)?";

    /**
     * Creates new form VistaVotante
     */
    public VistaGestorVotante(JFrame menuPrincipal) {
        initComponents();
        this.menuPrincipal = menuPrincipal;
        this.controladorVotante = new CtlVotante();
        this.botonActualizar.setVisible(false);
        this.botonNuevo.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelPestanias = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        comboTipoDocumento = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        campoNumeroDocumento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        campoNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        campoTelefono = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        campoCorreo = new javax.swing.JTextField();
        botonAgregar = new javax.swing.JButton();
        botonActualizar = new javax.swing.JButton();
        botonNuevo = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaVotantes = new javax.swing.JTable();
        botonEditar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();
        botonVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("Registro Votantes");

        panelPestanias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelPestaniasMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelPestaniasMousePressed(evt);
            }
        });

        jLabel5.setText("Tipo Documento");

        comboTipoDocumento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cedula Ciudadania", "Pasaporte", "Cedula Extranjeria" }));
        comboTipoDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoDocumentoActionPerformed(evt);
            }
        });

        jLabel2.setText("Numero de Documento");

        campoNumeroDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNumeroDocumentoActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre");

        campoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNombreActionPerformed(evt);
            }
        });

        jLabel6.setText("Telefono");

        campoTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTelefonoActionPerformed(evt);
            }
        });

        jLabel11.setText("Correo");

        campoCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoCorreoActionPerformed(evt);
            }
        });

        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        botonActualizar.setText("Actualizar");
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });

        botonNuevo.setText("Nuevo");
        botonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(203, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(campoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(campoNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(campoNumeroDocumento, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(comboTipoDocumento, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(campoTelefono, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(botonActualizar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(195, 195, 195))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(botonNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(329, 329, 329))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campoNumeroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregar)
                    .addComponent(botonActualizar))
                .addGap(18, 18, 18)
                .addComponent(botonNuevo)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        panelPestanias.addTab("Formulario", jPanel2);

        tablaVotantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Votante", "Tipo Documento", "Nombre", "Telefono", "Correo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaVotantes);

        botonEditar.setText("Editar");
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(botonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonEditar)
                    .addComponent(botonEliminar))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        panelPestanias.addTab("Tabla Votantes", jPanel4);

        botonVolver.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(265, 265, 265)
                        .addComponent(botonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelPestanias, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(botonVolver))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPestanias))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        this.setVisible(false);
        this.menuPrincipal.setVisible(true);

    }//GEN-LAST:event_botonVolverActionPerformed

    private void panelPestaniasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelPestaniasMousePressed
        ClsVotante votante = new ClsVotante();
        this.ObtenerVotantes();
    }//GEN-LAST:event_panelPestaniasMousePressed

    private void panelPestaniasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelPestaniasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_panelPestaniasMouseClicked

    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed
        this.panelPestanias.setSelectedIndex(0);
        this.botonActualizar.setVisible(true);
        this.botonNuevo.setVisible(true);
        int columna = 0;
        fila = this.tablaVotantes.getSelectedRow();
        if (fila >= 0) {
            id = this.tablaVotantes.getValueAt(fila, columna).toString();

            ClsVotante votante = this.buscarVotante(id);

            if (votante != null) {
                this.campoNumeroDocumento.setEnabled(false);
                this.botonAgregar.setEnabled(false);
                this.comboTipoDocumento.setSelectedItem(votante.getTipoDocumento());
                this.campoNumeroDocumento.setText(votante.getNumeroDocumento());
                this.campoNombre.setText(votante.getNombre());
                this.campoCorreo.setText(votante.getCorreo());
                this.campoTelefono.setText(votante.getTelefono());
            }
        } else {
            mensaje = new ClsMensajes(ClsMensajes.ERROR, "Para Actualizar no puede estar vacia la tabla o debe seleccionar al menos un registro");
            mensaje.mostrarMensajeError();
            this.botonActualizar.setVisible(false);
            this.botonNuevo.setVisible(false);
            this.botonAgregar.setEnabled(true);
            this.campoNumeroDocumento.setEnabled(true);
        }
    }//GEN-LAST:event_botonEditarActionPerformed

    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        if (this.comboTipoDocumento.getSelectedItem().toString().equals("")) {
            JOptionPane.showMessageDialog(this, "El campo Tipo de Documento no puede ser Vacio");
        } else {
            tipoDocumento = this.comboTipoDocumento.getSelectedItem().toString();
            if (this.campoNumeroDocumento.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "El campo Numero de Documento no puede ser Vacio");
            } else {
                numeroDocumento = this.campoNumeroDocumento.getText();
                if (this.campoNombre.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "El campo Nombre no puede ser Vacio");
                } else {
                    nombre = this.campoNombre.getText();
                    if (this.campoTelefono.getText().equals("")) {
                        JOptionPane.showMessageDialog(this, "El campo Telefono no puede ser Vacio");
                    } else {
                        telefono = this.campoTelefono.getText();
                        Boolean match = telefono.matches(PatronTel);
                        if (match == true) {
                            if (this.campoCorreo.getText().equals("")) {
                                JOptionPane.showMessageDialog(this, "El campo Correo no puede ser Vacio");
                            } else {
                                correo = this.campoCorreo.getText();
                                Matcher mather = patron.matcher(correo);
                                if (mather.find() == true) {
                                    System.out.println("El email ingresado es v√°lido.");
                                    ClsVotante votante = new ClsVotante(tipoDocumento,numeroDocumento , nombre, telefono, correo);
                                    mensaje = this.controladorVotante.actualizarVotante(votante);
                                    if (mensaje.getTipo().equals(ClsMensajes.OK)) {
                                        ObtenerVotantes();
                                        mensaje.mostrarMensajeOk();
                                        this.limpiarCampos();
                                    } else {
                                        mensaje = new ClsMensajes(ClsMensajes.ERROR, "No se Pudo realizar la Actualizaci√≥n");
                                        mensaje.mostrarMensajeError();
                                        limpiarCampos();
                                    }
                                } else {
                                    System.out.println("El email ingresado es inv√°lido.");
                                    JOptionPane.showMessageDialog(this, "El correo ingresado no cumple con el formato solicitado: ejemplo@ejemplo.com");
                                }

                            }
                        } else {
                            System.out.println("El telefono ingresado es inv√°lido.");
                            JOptionPane.showMessageDialog(this, "El telefono ingresado no es numerico");

                        }
                    }

                }
            }
        }
        this.botonActualizar.setVisible(false);
        this.botonNuevo.setVisible(false);
        this.botonAgregar.setEnabled(true);
        this.campoNumeroDocumento.setEnabled(true);
    }//GEN-LAST:event_botonActualizarActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        if (this.comboTipoDocumento.getSelectedItem().toString().equals("")) {
            JOptionPane.showMessageDialog(this, "El campo Tipo de Documento no puede ser Vacio");
        } else {
            tipoDocumento = this.comboTipoDocumento.getSelectedItem().toString();
            if (this.campoNumeroDocumento.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "El campo Numero de Documento no puede ser Vacio");
            } else {
                numeroDocumento = this.campoNumeroDocumento.getText();
                if (this.campoNombre.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "El campo Nombre no puede ser Vacio");
                } else {
                    nombre = this.campoNombre.getText();
                    if (this.campoTelefono.getText().equals("")) {
                        JOptionPane.showMessageDialog(this, "El campo Telefono no puede ser Vacio");
                    } else {
                        telefono = this.campoTelefono.getText();
                        if (this.campoCorreo.getText().equals("")) {
                            JOptionPane.showMessageDialog(this, "El campo Correo no puede ser Vacio");
                        } else {
                            telefono = this.campoTelefono.getText();
                            Boolean match = telefono.matches(PatronTel);
                            if (match == true) {
                                correo = this.campoCorreo.getText();
                                Matcher mather = patron.matcher(correo);
                                if (mather.find() == true) {
                                    System.out.println("El email ingresado es v√°lido.");
                                    ClsVotante votante = new ClsVotante(tipoDocumento, numeroDocumento, nombre, telefono, correo);
                                    mensaje = this.controladorVotante.agregarVotante(votante);
                                    if (mensaje.getTipo().equals(ClsMensajes.OK)) {
                                        ObtenerVotantes();
                                        mensaje.mostrarMensajeOk();
                                        this.limpiarCampos();
                                    } else {
                                        if (mensaje.getTipo().equals(ClsMensajes.ERROR)) {
                                            mensaje.mostrarMensajeError();
                                        } else {
                                            System.out.println("El email ingresado es inv√°lido.");
                                            JOptionPane.showMessageDialog(this, "El correo ingresado no cumple con el formato solicitado: ejemplo@ejemplo.com");
                                        }
                                    }
                                } else {
                                    System.out.println("El telefono ingresado es inv√°lido.");
                                    JOptionPane.showMessageDialog(this, "El telefono ingresado no es numerico");
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void campoCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoCorreoActionPerformed

    private void campoTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTelefonoActionPerformed

    private void campoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNombreActionPerformed

    private void campoNumeroDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNumeroDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNumeroDocumentoActionPerformed

    private void comboTipoDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTipoDocumentoActionPerformed

    private void botonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoActionPerformed
        this.botonAgregar.setVisible(true);
        this.botonAgregar.setEnabled(true);
        this.botonActualizar.setVisible(false);
        this.botonNuevo.setVisible(false);
        this.campoNumeroDocumento.setEnabled(true);
        this.limpiarCampos();
    }//GEN-LAST:event_botonNuevoActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        int columna = 0;
        fila = this.tablaVotantes.getSelectedRow();

        System.err.println(fila);

        if (fila >= 0) {
            String id = this.tablaVotantes.getValueAt(fila, columna).toString();
            mensaje = this.controladorVotante.eliminarVotante(id);
            if (mensaje.getTipo().equals(ClsMensajes.OK)) {
                ObtenerVotantes();
                mensaje.mostrarMensajeOk();
            } else {
                if (mensaje.getTipo().equals(ClsMensajes.ERROR)) {
                    mensaje.mostrarMensajeError();
                }
            }
        } else {
            mensaje = new ClsMensajes(ClsMensajes.ERROR, "El id a eliminar no puede ser vacio y debe seleccionar alguna fila");
            mensaje.mostrarMensajeError();
        }
    }//GEN-LAST:event_botonEliminarActionPerformed
    public void ObtenerVotantes() {
        this.listaVotantes = this.controladorVotante.Obtenervotantes();
        this.ActualizarTabla(listaVotantes);
    }

    public void ActualizarTabla(LinkedList<ClsVotante> votantes) {
        DefaultTableModel modelo = (DefaultTableModel) this.tablaVotantes.getModel();
        modelo.setRowCount(0);

        for (ClsVotante c : votantes) {
            Object[] fila = {c.getNumeroDocumento(), c.getTipoDocumento(),c.getNombre(), c.getTelefono(), c.getCorreo()};
            modelo.addRow(fila);
        }
    }

    public ClsVotante buscarVotante(String idVotante) {
        for (ClsVotante c : this.listaVotantes) {
            if (idVotante.equals(c.getNumeroDocumento())) {
                return c;
            }
        }
        return null;
    }

    public void limpiarCampos() {
        this.comboTipoDocumento.setSelectedIndex(0);
        this.campoNumeroDocumento.setText("");
        this.campoNombre.setText("");
        this.campoTelefono.setText("");
        this.campoCorreo.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaGestorVotante.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaGestorVotante.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaGestorVotante.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaGestorVotante.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaGestorVotante(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonNuevo;
    private javax.swing.JButton botonVolver;
    private javax.swing.JTextField campoCorreo;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoNumeroDocumento;
    private javax.swing.JTextField campoTelefono;
    private javax.swing.JComboBox<String> comboTipoDocumento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane panelPestanias;
    private javax.swing.JTable tablaVotantes;
    // End of variables declaration//GEN-END:variables
}
