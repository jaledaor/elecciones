/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Clases.ClsMensajes;
import Clases.ClsVotante;
import Clases.ClsVoto;
import Controladores.CtlVoto;
import java.util.LinkedList;
import java.util.regex.Matcher;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hueck
 */
public class VistaGestorVoto extends javax.swing.JFrame {

    JFrame menuPrincipal;
    LinkedList<ClsVoto> listaElecciones;
    LinkedList<ClsVoto> listaCandidatos;
    LinkedList<ClsVotante> listaVotantes;
    LinkedList<ClsVoto> listaVotos;
    ClsMensajes mensaje;
    int fila;
    String idVoto;
    String idTemp;
    CtlVoto controladorVotacion;
    String idEleccion, idCandidato, idVotante;

    /**
     * Creates new form VistaGectionVoto
     */
    public VistaGestorVoto(JFrame menuPrincipal) {
        initComponents();
        this.menuPrincipal = menuPrincipal;
        this.controladorVotacion = new CtlVoto();
        obtenerElecciones();
        obtenerVotos(this.comboElecciones.getItemAt(0));
        this.comboCandidatos.setEnabled(false);
        this.comboVotantes.setEnabled(false);
        this.botonActualizar.setEnabled(false);
        this.botonVotar.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboElecciones = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        comboCandidatos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        comboVotantes = new javax.swing.JComboBox<>();
        botonVotar = new javax.swing.JButton();
        botonActualizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        botonVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVotos = new javax.swing.JTable();
        botonEditar = new javax.swing.JButton();
        botonEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Eleccion Existente");

        comboElecciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboEleccionesItemStateChanged(evt);
            }
        });
        comboElecciones.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                comboEleccionesFocusGained(evt);
            }
        });
        comboElecciones.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                comboEleccionesPopupMenuWillBecomeVisible(evt);
            }
        });
        comboElecciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboEleccionesMouseClicked(evt);
            }
        });
        comboElecciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEleccionesActionPerformed(evt);
            }
        });
        comboElecciones.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboEleccionesPropertyChange(evt);
            }
        });

        jLabel2.setText("Candidato Ligado a la Elección");

        comboCandidatos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboCandidatosItemStateChanged(evt);
            }
        });
        comboCandidatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboCandidatosMouseClicked(evt);
            }
        });
        comboCandidatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCandidatosActionPerformed(evt);
            }
        });
        comboCandidatos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboCandidatosPropertyChange(evt);
            }
        });

        jLabel3.setText("Votantes Habilitados");

        comboVotantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboVotantesActionPerformed(evt);
            }
        });

        botonVotar.setText("Votar");
        botonVotar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVotarActionPerformed(evt);
            }
        });

        botonActualizar.setText("Actualizar");
        botonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(botonVotar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonActualizar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(comboElecciones, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboCandidatos, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(113, 113, 113)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboVotantes, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboElecciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboCandidatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboVotantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonVotar)
                    .addComponent(botonActualizar))
                .addGap(25, 25, 25))
        );

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Gestion Votación");

        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        tablaVotos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Id Voto", "Id Eleccion", "Id Candidato", "Id Votante", "Fecha Voto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaVotos);

        botonEditar.setText("Editar Voto");
        botonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEditarActionPerformed(evt);
            }
        });

        botonEliminar.setText("Eliminar Voto");
        botonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(332, 332, 332)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(botonVolver))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonEditar)
                        .addGap(47, 47, 47)
                        .addComponent(botonEliminar)))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        this.setVisible(false);
        this.menuPrincipal.setVisible(true);
    }//GEN-LAST:event_botonVolverActionPerformed

    private void comboEleccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEleccionesActionPerformed
        String idEleccion = this.comboElecciones.getSelectedItem().toString();
        obtenerVotos(idEleccion);
        obtenerCandidatos(idEleccion);
    }//GEN-LAST:event_comboEleccionesActionPerformed

    private void comboCandidatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCandidatosActionPerformed
        obtenerVotantes();
        this.comboVotantes.setEnabled(true);
        
    }//GEN-LAST:event_comboCandidatosActionPerformed

    private void comboVotantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboVotantesActionPerformed
        
    }//GEN-LAST:event_comboVotantesActionPerformed

    private void comboEleccionesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboEleccionesPropertyChange

    }//GEN-LAST:event_comboEleccionesPropertyChange

    private void comboEleccionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboEleccionesItemStateChanged

    }//GEN-LAST:event_comboEleccionesItemStateChanged

    private void comboCandidatosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboCandidatosItemStateChanged

    }//GEN-LAST:event_comboCandidatosItemStateChanged

    private void comboCandidatosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboCandidatosPropertyChange

    }//GEN-LAST:event_comboCandidatosPropertyChange

    private void comboEleccionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboEleccionesMouseClicked
        
    }//GEN-LAST:event_comboEleccionesMouseClicked

    private void comboCandidatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboCandidatosMouseClicked
        
    }//GEN-LAST:event_comboCandidatosMouseClicked

    private void botonVotarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVotarActionPerformed
        if (this.comboElecciones.getSelectedItem().toString().equals("")) {
            JOptionPane.showMessageDialog(this, "El valor de la elección no puede ser vacio");
        } else {
            idEleccion = this.comboElecciones.getSelectedItem().toString();
            if (this.comboCandidatos.getSelectedItem().toString().equals("") || 
                this.comboCandidatos.getSelectedItem().toString()==null) {
                JOptionPane.showMessageDialog(this, "El valor del candidato no puede ser vacio");
            } else {
                idCandidato = this.comboCandidatos.getSelectedItem().toString();
                if (this.comboVotantes.getSelectedItem().toString().equals("")) {
                    JOptionPane.showMessageDialog(this, "El valor del votante no puede ser vacio");
                } else {
                    idVotante = this.comboVotantes.getSelectedItem().toString();
                    ClsVoto voto = new ClsVoto(idCandidato, idEleccion, idVotante);
                    mensaje = this.controladorVotacion.agregarVoto(voto);
                    if (mensaje.getTipo().equals(ClsMensajes.OK)) {
                        obtenerVotos(idEleccion);
                        mensaje.mostrarMensajeOk();
                        this.limpiarCampos();
                    } else {
                        if (mensaje.getTipo().equals(ClsMensajes.ERROR)) {
                            mensaje.mostrarMensajeError();
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_botonVotarActionPerformed

    private void comboEleccionesPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboEleccionesPopupMenuWillBecomeVisible
        
    }//GEN-LAST:event_comboEleccionesPopupMenuWillBecomeVisible

    private void comboEleccionesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboEleccionesFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEleccionesFocusGained

    private void botonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEditarActionPerformed
        int columna = 0;
        idVoto="";
        fila = this.tablaVotos.getSelectedRow();
        if (fila >= 0) {
            idTemp = this.tablaVotos.getValueAt(fila, columna).toString();
            ClsVoto voto = this.buscarVoto(idTemp);
            if (voto != null) {
                this.botonActualizar.setEnabled(true);
                this.comboElecciones.setEnabled(false);
                this.botonVotar.setEnabled(false);
                this.comboElecciones.setSelectedItem(voto.getIdEleccion());
                this.comboCandidatos.setSelectedItem(voto.getIdCandidato());
                this.comboVotantes.setSelectedItem(voto.getIdVotante());
                this.idVoto=idTemp;
                
            }
        } else {
            mensaje = new ClsMensajes(ClsMensajes.ERROR, "Para Actualizar no puede estar vacia la tabla o debe seleccionar al menos un registro");
            mensaje.mostrarMensajeError();
            this.comboElecciones.setEnabled(true);
            this.botonActualizar.setEnabled(false);
            this.botonVotar.setEnabled(true);
        } 
    }//GEN-LAST:event_botonEditarActionPerformed

    private void botonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarActionPerformed
        int columna = 0;
        fila = this.tablaVotos.getSelectedRow();

        System.err.println(fila);

        if (fila >= 0) {
            idTemp = this.tablaVotos.getValueAt(fila, columna).toString();
            mensaje = this.controladorVotacion.eliminarVoto(idTemp);
            if (mensaje.getTipo().equals(ClsMensajes.OK)) {
                obtenerVotos(this.comboElecciones.getItemAt(0));
                mensaje.mostrarMensajeOk();
                limpiarCampos();
            } else {
                if (mensaje.getTipo().equals(ClsMensajes.ERROR)) {
                    mensaje.mostrarMensajeError();
                    obtenerVotos(this.comboElecciones.getItemAt(0));
                    limpiarCampos();
                }
            }
        } else {
            mensaje = new ClsMensajes(ClsMensajes.ERROR, "La Elección a eliminar no puede ser vacio o debe seleccionar por lo menos una fila");
            mensaje.mostrarMensajeError();
            limpiarCampos();
        }
    }//GEN-LAST:event_botonEliminarActionPerformed

    private void botonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarActionPerformed
        this.botonVotar.setEnabled(false);
        if (this.comboElecciones.getSelectedItem().toString().equals("")) {
            JOptionPane.showMessageDialog(this, "El valor de la elección no puede ser vacio");
        } else {
            idEleccion = this.comboElecciones.getSelectedItem().toString();
            if (this.comboCandidatos.getSelectedItem().toString().equals("") || 
                this.comboCandidatos.getSelectedItem().toString()==null) {
                JOptionPane.showMessageDialog(this, "El valor del candidato no puede ser vacio");
            } else {
                idCandidato = this.comboCandidatos.getSelectedItem().toString();
                if (this.comboVotantes.getSelectedItem().toString().equals("")) {
                    JOptionPane.showMessageDialog(this, "El valor del votante no puede ser vacio");
                } else {
                    idVotante = this.comboVotantes.getSelectedItem().toString();
                    ClsVoto voto = new ClsVoto(idCandidato, idEleccion, idVotante,idVoto);
                    mensaje = this.controladorVotacion.actualizarVoto(voto);
                    if (mensaje.getTipo().equals(ClsMensajes.OK)) {
                        obtenerVotos(idEleccion);
                        mensaje.mostrarMensajeOk();
                        this.limpiarCampos();
                    } else {
                        if (mensaje.getTipo().equals(ClsMensajes.ERROR)) {
                            mensaje.mostrarMensajeError();
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_botonActualizarActionPerformed

    public void obtenerElecciones() {
        this.listaElecciones = this.controladorVotacion.obtenerElecciones();
        this.llenarComboElecciones(listaElecciones);

    }

    public void obtenerCandidatos(String id) {
        this.listaCandidatos = this.controladorVotacion.obtenerCandidatos(id);
        this.llenarComboCandidatos(listaCandidatos);
        this.comboCandidatos.setEnabled(true);
    }

    public void obtenerVotantes() {
        this.listaVotantes = this.controladorVotacion.obtenerVotantes();
        this.llenarComboVotantes(listaVotantes);
    }

    public void llenarComboElecciones(LinkedList<ClsVoto> voto) {
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) this.comboElecciones.getModel();
        modelo.removeAllElements();
        for (ClsVoto c : voto) {
            comboElecciones.addItem(c.getIdEleccion());
        }
    }

    public void llenarComboCandidatos(LinkedList<ClsVoto> voto) {
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) this.comboCandidatos.getModel();
        modelo.removeAllElements();
        for (ClsVoto c : voto) {
            comboCandidatos.addItem(c.getIdCandidato());
        }
    }

    public void llenarComboVotantes(LinkedList<ClsVotante> votantes) {
        DefaultComboBoxModel modelo = (DefaultComboBoxModel) this.comboVotantes.getModel();
        modelo.removeAllElements();
        for (ClsVotante c : votantes) {
            comboVotantes.addItem(c.getNumeroDocumento());
        }
    }
    
    public void limpiarCampos() {
        DefaultComboBoxModel modelo1 = (DefaultComboBoxModel) this.comboVotantes.getModel();
        DefaultComboBoxModel modelo2 = (DefaultComboBoxModel) this.comboCandidatos.getModel();
        this.comboElecciones.setSelectedIndex(0);
        this.comboElecciones.setEnabled(true);
        modelo1.removeAllElements();
        modelo2.removeAllElements();
        this.comboVotantes.setEnabled(false);
        this.comboCandidatos.setEnabled(false);
        this.botonActualizar.setEnabled(false);
        this.botonVotar.setEnabled(true);
        obtenerVotantes();
    }
    
    public void obtenerVotos(String idEleccion) {
        this.listaVotos = this.controladorVotacion.obtenerVotos(idEleccion);
        this.actualizarTabla(listaVotos);
    }
    
    public void actualizarTabla(LinkedList<ClsVoto> votos) {
        DefaultTableModel modelo = (DefaultTableModel) this.tablaVotos.getModel();
        modelo.setRowCount(0);

        for (ClsVoto c : votos) {
            Object[] fila = {c.getIdVoto(), c.getIdEleccion(), c.getIdCandidato(), c.getIdVotante(), c.getFechaEleccion()};
            modelo.addRow(fila);
        }
    }
    
    public ClsVoto buscarVoto(String idVoto) {
        for (ClsVoto c : this.listaVotos) {
            if (idVoto.equals(c.getIdVoto())) {
                return c;
            }
        }
        return null;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaGestorVoto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaGestorVoto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaGestorVoto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaGestorVoto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaGestorVoto(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizar;
    private javax.swing.JButton botonEditar;
    private javax.swing.JButton botonEliminar;
    private javax.swing.JButton botonVolver;
    private javax.swing.JButton botonVotar;
    private javax.swing.JComboBox<String> comboCandidatos;
    private javax.swing.JComboBox<String> comboElecciones;
    private javax.swing.JComboBox<String> comboVotantes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaVotos;
    // End of variables declaration//GEN-END:variables
}
